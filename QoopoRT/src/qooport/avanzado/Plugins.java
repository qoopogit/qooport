/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qooport.avanzado;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import plugin.Plugin;
import qooport.Global;
import qooport.asociado.Asociado;
import qooport.utilidades.Util;

/**
 *
 * @author alberto
 */
public class Plugins extends javax.swing.JFrame {

    private Asociado asociado;

    private List<Plugin> listaDisponibles;
    private List<Plugin> listaInstalados;

    /**
     * Creates new form Plugins
     */
    public Plugins(Asociado asociado) {
        this.asociado = asociado;
        initComponents();
        this.setIconImage(Util.cargarIcono16("/resources/plugin.png").getImage());
        lblTitulo.setIcon(Util.cargarIcono16("/resources/plugin.png"));
        btnActualizar.setIcon(Util.cargarIcono16("/resources/refresh_blue.png"));
        btnEnviar.setIcon(Util.cargarIcono16("/resources/2rightarrow.png"));
        btnDescargar.setIcon(Util.cargarIcono16("/resources/2leftarrow.png"));
        btnEnviarTodo.setIcon(Util.cargarIcono16("/resources/2rightarrow.png"));
        btnDescargarTodo.setIcon(Util.cargarIcono16("/resources/2leftarrow.png"));
    }

    public void actualizarDisponibles() {
        Global.cargarPlugins();
        actualizarListaDisponiblesPlugins(Global.plugins);
    }

    public void actualizarListaDisponiblesPlugins(List<Plugin> lista) {
        this.listaDisponibles = lista;
        for (int i = this.tablaDisponibles.getRowCount() - 1; i > -1; i--) {
            ((DefaultTableModel) this.tablaDisponibles.getModel()).removeRow(i);
        }
        for (Plugin p : lista) {
            ((DefaultTableModel) this.tablaDisponibles.getModel()).addRow(new Object[]{
                p.getNombre(),
                p.getVersion()
            });
        }
    }

    public void actualizarListaPlugins(List<Plugin> lista) {
        this.listaInstalados = lista;
        if (lista == null) {

            return;
        }

        for (int i = this.tablaInstalados.getRowCount() - 1; i > -1; i--) {
            ((DefaultTableModel) this.tablaInstalados.getModel()).removeRow(i);
        }
        for (Plugin p : lista) {
            ((DefaultTableModel) this.tablaInstalados.getModel()).addRow(new Object[]{
                p.getNombre(),
                p.getVersion()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        lblTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDisponibles = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaInstalados = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        btnEnviar = new javax.swing.JButton();
        btnDescargar = new javax.swing.JButton();
        btnEnviarTodo = new javax.swing.JButton();
        btnDescargarTodo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        lblTitulo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblTitulo.setText("Plugins");

        jLabel1.setText("Disponibles");

        jLabel2.setText("Instalado");

        tablaDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Versión"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaDisponibles);

        tablaInstalados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Versión"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaInstalados);

        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEnviar.setToolTipText("Enviar seleccionados");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        btnDescargar.setEnabled(false);
        btnDescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarActionPerformed(evt);
            }
        });

        btnEnviarTodo.setToolTipText("Enviar todos");
        btnEnviarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarTodoActionPerformed(evt);
            }
        });

        btnDescargarTodo.setEnabled(false);
        btnDescargarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(293, 293, 293))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDescargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEnviarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDescargarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDescargar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDescargarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizarDisponibles();
        asociado.listarPlugins();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEnviarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarTodoActionPerformed
        try {
            for (Plugin plugin : this.listaDisponibles) {
                Global.extrarPlugin(plugin);
                asociado.enviarPlugin(plugin);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEnviarTodoActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        try {
            for (int i = 0; i < this.tablaDisponibles.getSelectedRows().length; i++) {
                int j = this.tablaDisponibles.getSelectedRows()[i];

//                System.out.println("se deberia enviar al plugin ");
//                System.out.println(listaDisponibles.get(j).getNombre() + " " + listaDisponibles.get(j).getVersion());
                Global.extrarPlugin(listaDisponibles.get(j));
                asociado.enviarPlugin(listaDisponibles.get(j));
//            String seleccionado = this.tablaDisponibles.getValueAt(this.tablaDisponibles.getSelectedRows()[i], 2).toString();
//            lst.add(seleccionado);
            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnDescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDescargarActionPerformed

    private void btnDescargarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarTodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDescargarTodoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnDescargar;
    private javax.swing.JButton btnDescargarTodo;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnEnviarTodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tablaDisponibles;
    private javax.swing.JTable tablaInstalados;
    // End of variables declaration//GEN-END:variables
}
